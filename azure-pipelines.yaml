name: $(Build.SourceBranchName)_$(Build.Reason)_$(majorVersion).$(Build.BuildId)$(Rev:.r)
variables:
  buildConfiguration: Release
  majorVersion: 0.0.0

# Enable PR validation on branches master and dev
pr:
  branches:
    include:
      - master
      - dev

# Enable CI on branches master and dev
# Batch builds
trigger:
  batch: true
  branches:
    include:
      - dev
      - master

continueOnError: false
pool:
  name: 1ES-Hosted-Azfunc
  demands:
    - ImageOverride -equals MMSUbuntu20.04TLS

steps:
  - task: DotNetCoreCLI@2
    displayName: Build project
    inputs:
      projects: |
        src/Microsoft.Azure.WebJobs.Extensions.Kafka/Microsoft.Azure.WebJobs.Extensions.Kafka.csproj
        test/Microsoft.Azure.WebJobs.Extensions.Kafka.UnitTests/Microsoft.Azure.WebJobs.Extensions.Kafka.UnitTests.csproj
        test/Microsoft.Azure.WebJobs.Extensions.Kafka.EndToEndTests/Microsoft.Azure.WebJobs.Extensions.Kafka.EndToEndTests.csproj
        test/Microsoft.Azure.WebJobs.Extensions.Kafka.LangEndToEndTests/Microsoft.Azure.WebJobs.Extensions.Kafka.LangEndToEndTests.csproj

  - task: DotNetCoreCLI@2
    displayName: Run unit tests
    inputs:
      command: test
      projects: ./test/Microsoft.Azure.WebJobs.Extensions.Kafka.UnitTests

  - task: ms.vss-governance-buildtask.governance-build-task-component-detection.ComponentGovernanceComponentDetection@0
    displayName: Component Detection

   - task: Bash@3
     displayName: Start Kafka in single node
     inputs:
       targetType: filePath
       filePath: ./test/Microsoft.Azure.WebJobs.Extensions.Kafka.EndToEndTests/start-kafka-test-environment.sh
       workingDirectory: test/Microsoft.Azure.WebJobs.Extensions.Kafka.EndToEndTests

   - task: DotNetCoreCLI@2
     displayName: Run e2e tests
     inputs:
       command: test
       projects: ./test/Microsoft.Azure.WebJobs.Extensions.Kafka.EndToEndTests

   - task: Bash@3
     displayName: Stop Kafka in single node
     inputs:
       targetType: filePath
       filePath: ./test/Microsoft.Azure.WebJobs.Extensions.Kafka.EndToEndTests/stop-kafka-test-environment.sh
       workingDirectory: test/Microsoft.Azure.WebJobs.Extensions.Kafka.EndToEndTests

  - task: Bash@3
    displayName: Package current source as NuGet package and pack it in Docker
    inputs:
      targetType: filePath
      filePath: ./script/create_package.sh

  # - task: Bash@3
  #   displayName: Start Kakfa in single node with Java and Python
  #   inputs:
  #     targetType: filePath
  #     filePath: ./test/Microsoft.Azure.WebJobs.Extensions.Kafka.LangEndToEndTests/server/start-kafka-test-environment.sh
  #     workingDirectory: test/Microsoft.Azure.WebJobs.Extensions.Kafka.LangEndToEndTests/server

  - task: DotNetCoreCLI@2
    displayName: Run language e2e tests
    inputs:
      command: test
      projects: ./test/Microsoft.Azure.WebJobs.Extensions.Kafka.LangEndToEndTests
    env:
      AZURE_CLIENT_ID: $(AZURE_CLIENT_ID)
      AZURE_CLIENT_SECRET: $(AZURE_CLIENT_SECRET)
      AZURE_SUBSCRIPTION_ID: $(AZURE_SUBSCRIPTION_ID)
      AZURE_TENANT_ID: $(AZURE_TENANT_ID)
      AzureWebJobsStorage: $(AzureWebJobsStorage)
      ConfluentBrokerList: $(ConfluentBrokerList)
      ConfluentCloudPassword: $(ConfluentCloudPassword)
      ConfluentCloudUsername: $(ConfluentCloudUsername)
      EventHubBrokerList: $(EventHubBrokerList)
      EventHubConnectionString: $(EventHubConnectionString)

  - script: dotnet pack -o '$(Build.ArtifactStagingDirectory)' --include-symbols src/Microsoft.Azure.WebJobs.Extensions.Kafka/Microsoft.Azure.WebJobs.Extensions.Kafka.csproj
    displayName: Pack NuGet package

  - task: ManifestGeneratorTask@0
    displayName: SBOM Generation Task
    inputs:
      BuildDropPath: $(Build.ArtifactStagingDirectory)
      PackageName: Microsoft.Azure.WebJobs.Extensions.Kafka
      Verbosity: Information

  - task: PublishBuildArtifacts@1
    inputs:
      pathToPublish: $(Build.ArtifactStagingDirectory)
      artifactName: drop
      publishLocation: Container
