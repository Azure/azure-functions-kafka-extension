name: $(Build.SourceBranchName)_$(Build.Reason)_$(Major).$(Minor).$(Patch).$(Build.BuildId)$(Rev:.r)
variables:
  buildConfiguration: 'Release'
  Major: '0'
  Minor: '0'
  Patch: '0-alpha'

# Enable PR validation on branches master and dev
pr:
  branches:
    include:
    - master
    - dev

# Enable CI on branches master and dev
# Batch builds
trigger:
  batch: true
  branches:
    include:
    - dev
    - master

jobs:

- job: build_and_test
  displayName: 'Build and Test'
  continueOnError: false
  pool:
    vmImage: 'Ubuntu 16.04'
  
  steps:
  - task: DotNetCoreCLI@2
    displayName: 'Build project'
    inputs:
      projects: .

  - task: DotNetCoreCLI@2
    displayName: 'Run unit tests'
    inputs:
      command: test
      projects: ./test/Microsoft.Azure.WebJobs.Extensions.Kafka.UnitTests

  - task: ms.vss-governance-buildtask.governance-build-task-component-detection.ComponentGovernanceComponentDetection@0
    displayName: 'Component Detection'

  - task: Bash@3
    displayName: 'Start kafka in single node'
    inputs:
      targetType: filePath
      filePath: './test/Microsoft.Azure.WebJobs.Extensions.Kafka.EndToEndTests/start-kafka-test-environment.sh'
      workingDirectory: test/Microsoft.Azure.WebJobs.Extensions.Kafka.EndToEndTests

  - task: DotNetCoreCLI@2
    displayName: 'Run e2e tests'
    inputs:
      command: test
      projects: ./test/Microsoft.Azure.WebJobs.Extensions.Kafka.EndToEndTests

  - script: dotnet pack /p:PackageVersion=$(Major).$(Minor).$(Patch) -o '$(Build.ArtifactStagingDirectory)' --include-symbols src/Microsoft.Azure.WebJobs.Extensions.Kafka/Microsoft.Azure.WebJobs.Extensions.Kafka.csproj
    displayName: 'Pack nuget pacakge'
  
  - task: PublishBuildArtifacts@1
    inputs:
      pathToPublish: '$(Build.ArtifactStagingDirectory)'
      artifactName: 'drop'
      publishLocation: 'Container'
